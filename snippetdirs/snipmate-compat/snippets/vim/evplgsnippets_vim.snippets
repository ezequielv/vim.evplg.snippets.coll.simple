#? snipmate-only: #+ version 1

# TODO: copy from the other file, and just replace the 'snippet!' -> 'snippet', and also remove the 'version {n}' lines, etc.
#  IDEA: generate this through a makefile, for example.

snippet function function (alias)
	f

snippet f function (smart)
	`evplg#snippets#scope#vim#keyword('function')`!${1: `evplg#snippets#scope#vim#get_default_function_prefix()`}${2:function_name}(${3})
		${0}
	`evplg#snippets#scope#vim#keyword('endfunction')`

snippet t try ... catch statement (alias)
	try

snippet try try ... catch statement (smart)
	`evplg#snippets#scope#vim#keyword('try')`
		${1:${VISUAL}}
	`evplg#snippets#scope#vim#keyword('catch')` ${2}
		${0}
	`evplg#snippets#scope#vim#keyword('endtry')`

snippet for for ... in loop (smart)
	`evplg#snippets#scope#vim#keyword('for')` ${1} in ${2}
		${0:${VISUAL}}
	`evplg#snippets#scope#vim#keyword('endfor')`

snippet forkv for [key, value] in loop (smart)
	`evplg#snippets#scope#vim#keyword('for')` [${1},${2}] in items(${3})
		${0}
		`evplg#snippets#scope#vim#keyword('unlet')` $1 $2
	`evplg#snippets#scope#vim#keyword('endfor')`

snippet w while loop (alias)
	while

snippet wh while loop (alias)
	while

snippet while while loop (smart)
	`evplg#snippets#scope#vim#keyword('while')` ${1}
		${0:${VISUAL}}
	`evplg#snippets#scope#vim#keyword('endwhile')`

snippet if if statement (smart)
	`evplg#snippets#scope#vim#keyword('if')` ${1}
		${0:${VISUAL}}
	`evplg#snippets#scope#vim#keyword('endif')`

snippet ife if ... else statement (smart)
	`evplg#snippets#scope#vim#keyword('if')` ${1}
		${2:${VISUAL}}
	`evplg#snippets#scope#vim#keyword('else')`
		${0}
	`evplg#snippets#scope#vim#keyword('endif')`

snippet exe execute command (smart)
	`evplg#snippets#scope#vim#keyword('execute')` 
